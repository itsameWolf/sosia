/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define LOWER 1

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {

        bt1: bluetooth_1 {
            compatible = "zmk,behavior-mod-morph";
            label = "BLUETOOTH_1";
            #binding-cells = <0>;
            bindings = <&kp N1>, <&bt BT_SEL 0>;
            mods = <(MOD_LGUI)>;
        };

        bt2: bluetooth_2 {
            compatible = "zmk,behavior-mod-morph";
            label = "BLUETOOTH_2";
            #binding-cells = <0>;
            bindings = <&kp N2>, <&bt BT_SEL 1>;
            mods = <(MOD_LGUI)>;
        };

        bt3: bluetooth_3 {
            compatible = "zmk,behavior-mod-morph";
            label = "BLUETOOTH_3";
            #binding-cells = <0>;
            bindings = <&kp N3>, <&bt BT_SEL 2>;
            mods = <(MOD_LGUI)>;
        };

        bt_clear: bluetooth_clear {
            compatible = "zmk,behavior-mod-morph";
            label = "BLUETOOTH_CLEAR";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&bt BT_CLR>;
            mods = <(MOD_LGUI)>;
        };

    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &bt_clear &bt1     &bt2     &bt3           &kp N4         &kp N5          &kp N6  &kp N7         &kp N8    &kp N9   &kp N0    &kp BSPC
                &kp GRAVE &kp Q    &kp W    &kp E          &kp R          &kp T           &kp Y   &kp U          &kp I     &kp O    &kp P     &kp NON_US_HASH
                &kp TAB   &kp A    &kp S    &kp D          &kp F          &kp G           &kp H   &kp J          &kp K     &kp L    &kp SEMI  &kp APOS
                &kp LSHFT &kp Z    &kp X    &kp C          &kp V          &kp B           &kp N   &kp M          &kp COMMA &kp DOT  &kp SLASH &kp RSHFT
                &kp LCTRL &kp LALT &kp LGUI &kp BACKSLASH  &lt LOWER LBKT &kp SPACE       &kp RET &lt LOWER RBKT &kp LEFT  &kp UP   &kp DOWN  &kp RIGHT
            >;
        };

        lower_layer {   
            bindings = <
                &trans    &kp F1    &kp F2      &kp F3      &kp F4    &kp F5                    &kp F6    &kp F7   &kp F8          &kp F9      &kp F10   &kp DEL
                &kp GRAVE &kp N1    &kp N2      &kp N3      &kp N4    &kp N5                    &kp N6    &kp N7   &kp N8          &kp N9      &kp F11   &kp F12
                &kp CAPS  &kp EXCL  &kp AT      &kp HASH    &kp DLLR  &kp PRCNT                 &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR    &kp RPAR  &kp PIPE
                &trans    &kp EQUAL &kp MINUS   &kp KP_PLUS &kp LBRC  &kp RBRC                  &kp LBKT  &kp RBKT &kp SEMI        &kp COLON   &kp BSLH  &trans
                &trans    &trans    &bootloader &reset      &trans    &trans                    &trans    &trans   &reset          &bootloader &trans    &trans
            >;
        };

    };
};
